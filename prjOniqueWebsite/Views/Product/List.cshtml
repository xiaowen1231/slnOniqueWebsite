@{
    string title = "所有商品";
    string categoryName = string.Empty;
    string keyword = string.Empty;
    string pageTitle = title;
    int pageNumber = 0;
    if (ViewBag.PageNumber != 0)
    {
        pageNumber = ViewBag.PageNumber;
    }
    if (!string.IsNullOrEmpty(ViewBag.Keyword))
    {
        keyword = ViewBag.Keyword;

        pageTitle = title + " > 搜尋: " + keyword;
    }
    if (!string.IsNullOrEmpty(ViewBag.CategoryName))
    {
        categoryName = ViewBag.CategoryName;
        pageTitle += " > " + categoryName;
    }

    ViewData["Title"] = pageTitle;

    Layout = Url.Content("~/Views/Shared/_Layout_Product.cshtml");
}

<div>
    <div class="m-2">
        <a href="@Url.Content("~/Home/Index")" class="fs-5 fw-bold link-underline-light link-dark">首頁</a>
        <span class="fs-5 fw-bold">&gt;</span>
        <span class="fs-5 fw-bold">@pageTitle</span>
        <input type="hidden" value="@keyword" id="searchKeyword" />
        <input type="hidden" value="@categoryName" id="searchCategoryName" />
        <input type="hidden" value="@pageNumber" id="searchPageNumber" />
    </div>
    <div class="d-flex m-2 gap-3 align-items-center ">
        <div>排序方式: </div>
        <div>
            <select class="form-select form-select-sm" id="selectOrderBy">
                <option value="newest">最新上架</option>
                <option value="sales">熱賣商品</option>
                <option value="priceDesc">價格高到低</option>
                <option value="priceAsc">價格低到高</option>
            </select>
        </div>
    </div>
    <div class="mx-auto d-flex flex-md-wrap " id="divProductList">
    </div>
    <div class="container m-3 cursor-pointer">
        <nav class="d-flex justify-content-center" aria-label="Page navigation example">
            <ul class="pagination ulGUI">
            </ul>
        </nav>
    </div>
    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <p>Some text in the Modal..</p>
        </div>

    </div>
</div>
@section Styles{
    <style>
        .price:before {
            content: "$"
        }

        .divNotFound {
            position: fixed;
            top: 50%;
            transform: translate(-45%,-30%);
            left: 50%;
        }

        .w-240-h-240:hover {
            width: 245px;
            height: 245px;
            transition: all 0.4s;
        }

        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content */
        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        /* The Close Button */
        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
}
@section Scripts{
    <script>
        let keyword = $('#searchKeyword').val()
        let categoryName = $('#searchCategoryName').val()
        let pageNumber = $("#searchPageNumber").val()

        Display(keyword, categoryName, "", pageNumber)

        async function Display(keyword, categoryName, rank, pageNumber) {
            const response = await fetch(`@Url.Content("~/ProductApi/ProductList?keyword=")${keyword}&categoryName=${categoryName}&rank=${rank}&pageNumber=${pageNumber}`)
            const datas = await response.json()
            console.log(datas)

            const { products, pagination } = datas.value;

            if (products.length != 0) {
                const cards = products.map(item => {

                    const { id, productName, price, photoPath } = item;

                    return (`<div data-id="${id}" class="cursor-pointer link-dark link-underline-opacity-0 border rounded shadow-sm m-2 divProductDetail" data-aos="fade-up">
                                        <div class="w-240-h-240 m-2">
                                            <img src="@Url.Content("~/images/uploads/products/")${photoPath}" class="rounded" />
                                        </div>
                                        <div class="bg-dark rounded text-white m-2 text-center p-1 fw-bold">${productName} </div>
                                                <div class="price text-center">${price}</div>
                                        <div class="d-flex gap-3 mx-2 mb-2 justify-content-end align-items-center">
                                            <div class="w-25-h-25 divShopping">
                                                <img src="@Url.Content("~/images/icon/shopping_black.png")" />
                                            </div>
                                            <div class="w-25-h-25 divCollection">
                                                <img src="@Url.Content("~/images/icon/love.png")" />
                                            </div>
                                        </div>
                                    </div>`)

                })

                let liPagination = ""

                if (pagination.pageNumber >= 1) {
                    liPagination += `<li  class="page-item ">
                                        <a class="page-link pageItemPrevNumber" data-pagenumber="${pagination.pageItemPrevNumber}" aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>`
                }
                for (let i = 0; i < pagination.pageBarItemCount; i++) {
                    let active = pagination.pageBarStartNumber + i == pagination.pageNumber ? "active" : "";
                    let clickPageNumber = pagination.pageBarStartNumber + i;
                    liPagination += `<li class="${active} page-item"><a class="page-link pageItemPrevNumber" data-pagenumber="${clickPageNumber}">${clickPageNumber}</a></li>`
                }

                if (pagination.pageNumber < pagination.pages) {
                    liPagination += `<li class="page-item">
                                        <a class="page-link pageItemPrevNumber" data-pagenumber="${pagination.pageItemNextNumber}" aria-label="Next">
                                            <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>`
                }

                $('#divProductList').html(cards.join(""))

                $('.ulGUI').html(liPagination)

            }
            else {
                let searchHint = `<div class="flex-fill divNotFound">
                                            <div class="w-200-h-200 mx-auto">
                                                    <img src="@Url.Content("~/images/icon/box.png")" alt="" style="height: 100%;height: 100%;">
                                            </div>
                                            <div class="text-center m-3 fw-bold fs-5 no_items.png">
                                                (ಥ_ಥ) 很抱歉 , 找不到相關商品
                                            </div>
                                                    <div class="text-secondary text-center fs-14px m-3 fw-bold">
                                                請確認搜尋條件
                                            </div>
                                        </div>`;

                $('#divProductList').html(searchHint)
            }
        }

        $("#selectOrderBy").on('change', function () {
            let rank = $(this).val();
            let catagoryName = $("#searchCategoryName").val();
            let keyword = $('#searchKeyword').val()

            Display(keyword, categoryName, rank)
        })

        $('#divProductList').on('click', '.divProductDetail', function (event) {
            let id = $(this).data("id")
            window.location.href = `@Url.Content("~/Product/Detail/")${id}`;
        })

        $('#divProductList').on('click', '.divShopping', async function (event) {
            event.stopPropagation();

            const response = await fetch(`@Url.Content("~/HomeApi/IsLogin")`)
            const isLogin = await response.json();

            if (!isLogin) {
                Swal.fire({
                    title: '請輸入商品數量、樣式和規格',
                    html:
                        ``,
                    showCancelButton: true,
                    confirmButtonColor: '#3C3C3C',
                    cancelButtonColor: '#D0D0D0',
                    confirmButtonText: '加入購物車',
                    cancelButtonText: '取消',
                    preConfirm: () => {
                        const quantity = document.getElementById('quantity').value;
                        const style = document.getElementById('style').value;
                        const specification = document.getElementById('specification').value;
                        // 在這裡將商品加入購物車的程式碼
                        // 使用quantity, style, specification的值進行購物車相關處理
                    },
                });
            } else {
                Swal.fire({
                    title: '尚未登入!',
                    text: "如想使用購物車,請先登入!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3C3C3C',
                    cancelButtonColor: '#D0D0D0',
                    confirmButtonText: '進行登入',
                    cancelButtonText: '稍後登入'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = `@Url.Content("~/Home/Login")`
                    }
                })
            }
        })

        $('#divProductList').on('click', '.divCollection', async function (event) {
            event.stopPropagation();

            const response = await fetch(`@Url.Content("~/HomeApi/IsLogin")`)
            const isLogin = await response.json();

            if (isLogin) {
                //todo add2Collection
            } else {
                Swal.fire({
                    title: '尚未登入!',
                    text: "如果想收藏商品,請先登入!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3C3C3C',
                    cancelButtonColor: '#D0D0D0',
                    confirmButtonText: '進行登入',
                    cancelButtonText: '稍後登入'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = `@Url.Content("~/Home/Login")`
                    }
                })
            }
        })

        $(".ulGUI").on('click', '.pageItemPrevNumber', function () {
            let rank = $("#selectOrderBy").val();
            let pageNumber = $(this).data("pagenumber");
            Display(keyword, categoryName, rank, pageNumber)
        })
    </script>
}