@model prjOniqueWebsite.Models.DTOs.ProductDto
@{
    ViewData["Title"] = "商品明細";
    Layout = Url.Content("~/Views/Shared/_Layout_Product.cshtml");
}

<div class="d-flex" id="divContent">
    <div class="w-500-h-500 rounded ">
        <img src="@Url.Content("~/images/uploads/products/")@Model.PhotoPath" id="productPhoto" class="rounded"/>
        <input type="hidden" id="stockId" />
        <div class="d-flex overflow-hidden my-2 divProductPhotoList" style="width:500px">
        </div>
    </div>        

    <div class="flex-fill">
        <input type="hidden" value="@Model.Id" id="productId" data-productid="@Model.Id" />
        <div class="fw-bold fs-4 border-bottom border-secondary p-2">@Model.ProductName</div>
        <div class="d-flex gap-2 mt-2">
            <div class="fw-bold p-2 width-90px text-end">商品價格:</div>
            @{
                if (Model.DiscountMethod != null)
                {
                    <div class="fw-bold p-2 text-danger" id="price">@Math.Round((decimal)Model.DiscountPrice)</div>
                }
                else
                {
                    <div class="fw-bold p-2 text-danger" id="price">@Model.Price.ToString("0")</div>
                }
            }
        </div>
        <div class="d-flex mt-2 gap-2 align-items-center">
            <div class="fw-bold p-2 width-90px text-end">顏色:</div>
            <div class="fw-bold p-2 d-flex width-120px ">
                <select class="form-select form-select-sm " id="selectColor">
                    <option value=""></option>
                </select>
            </div>
        </div>
        <div class="d-flex mt-2 gap-2 align-items-center">
            <div class="fw-bold p-2 width-90px text-end">尺寸:</div>
            <div class="fw-bold p-2 d-flex width-120px">
                <select class="form-select form-select-sm " id="selectSize">
                </select>
            </div>
        </div>
        <div class="d-flex mt-2 gap-2 align-items-center">
            <div class="fw-bold p-2 width-90px text-end">數量:</div>
            <div class="fw-bold p-2 d-flex ">
                <div class="border border-dark-subtle text-center cursor-pointer" style="width: 25px;" id="btnReduce">-</div>
                <input type="text" value="1" id="orderQty" class="width-50px text-center" />
                <div class="border border-dark-subtle text-center cursor-pointer" style="width: 25px;" id="btnIncrease">+</div>
            </div>
            <div class="fw-bold p-2 width-90px text-end">庫存數量:</div>
            <div class="text-danger" id="stockQty"></div>
        </div>
        <div class="d-flex mt-2 gap-2 align-items-center">
            <div class="fw-bold p-2 width-90px text-end">收藏:</div>
            <div class="fw-bold p-2 d-flex ">
                <div class="fw-bold p-1 d-flex width-40px">
                    <a href="#" class="divCollection">
                        <img src="~/images/icon/love.png" style="height:24px;width:24px"/>
                    </a>
                </div>
            </div>
            <div class="fw-bold p-2 width-90px text-end">分享:</div>
            <div class="fw-bold p-2 d-flex ">
                <div class="fw-bold p-2 d-flex width-40px">
                    <img src="~/images/icon/share.png" />
                </div>
            </div>
        </div>
        <div class="d-flex align-items-center justify-content-center gap-3 mt-4">
            <input type="button" value="立即購買" class="width-120px btn btn-outline-dark" />
            <input type="button" value="加入購物車" class="btn btn-dark width-120px" id="btnAddToCart" />
        </div>
    </div>
</div>

@section Styles{
    <link href="~/css/productDetail.css" rel="stylesheet" />
    <style>
        #price::before {
            content: "$";
        }

        .divProductPhoto {
            width: 100px;
            height: 100px;
            box-sizing:border-box;
            padding:2px
        }
    </style>
}

@section Scripts{
    <script>
        const selectColor = document.querySelector("#selectColor");
        const selectSize = document.querySelector("#selectSize");
        const productId = $("#productId").val();

        $("#btnReduce").click(function () {
            let orderQty = Number($("#orderQty").val())
            if (orderQty <= 1) {
                orderQty = 1;
                $("#orderQty").val(orderQty.toString());
            }
            else {
                orderQty--
                $("#orderQty").val(orderQty.toString());
            }
        })

        $("#btnIncrease").click(function () {
            let orderQty = Number($("#orderQty").val())
            orderQty++
            $("#orderQty").val(orderQty)
        })

        loadColor();

        async function loadColor() {
            const response = await fetch(`@Url.Content("~/productapi/GetStockColor/")${productId}`)
            const datas = await response.json();

            const colors = datas.map(color => {
                const { colorId, colorName } = color;
                return `<option value="${colorId}">${colorName}</option>`
            })

            selectColor.innerHTML = colors.join("")

            loadSize();
        }

        async function loadSize() {
            const colorId = $("#selectColor").val()

            const response = await fetch(`@Url.Content("~/productapi/GetStockSize?")id=${productId}&colorId=${colorId}`)
            const datas = await response.json();

            const sizes = datas.map(size => {
                const { sizeId, sizeName } = size
                return `<option value="${sizeId}">${sizeName}</option>`
            })

            selectSize.innerHTML = sizes.join("")

            loadProductPhoto()
        }

        selectColor.addEventListener('change', function () {
            loadSize()
        })

        selectSize.addEventListener('change', function () {
            loadProductPhoto()
        })

        async function loadProductPhoto() {
            const colorId = $("#selectColor").val()
            const sizeId = $("#selectSize").val()

            const response = await fetch(`@Url.Content("~/ProductApi/GetStockDetail?")productId=${productId}&colorId=${colorId}&sizeId=${sizeId}`)
            const psd = await response.json()

            const { photoPath, stockId, quantity } = psd

            $("#productPhoto").attr("src", `@Url.Content("~/images/uploads/products/")${photoPath}`)
            $("#stockQty").text(`${quantity}`)
            $("#stockId").val(`${stockId}`)

        }

        $('#btnAddToCart').click(async function () {

            const response = await fetch(`@Url.Content("~/HomeApi/IsLogin")`)
            const isLogin = await response.json();

            const stockId = $("#stockId").val()
            const qty = $("#orderQty").val()

            if (!isLogin) {
                Swal.fire({
                    title: '尚未登入!',
                    text: "要幫您導向登入頁面嗎?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3C3C3C',
                    cancelButtonColor: '#D0D0D0',
                    confirmButtonText: '進行登入',
                    cancelButtonText: '取消'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = `@Url.Content("~/Home/Login")`
                    }
                })
            }
            else {
                const stockId = $("#stockId").val()
                const qty = $("#orderQty").val()
                AddToCart(stockId, qty)
            }
        })

        $('.divCollection').on('click', async function (event) {
            event.stopPropagation();

            const response = await fetch(`@Url.Content("~/HomeApi/IsLogin")`)
            const isLogin = await response.json();

            if (isLogin) {
                let productId = $("#productId").data("productid");
                console.log(productId)
                const resp = await fetch(`@Url.Content("~/MemberApi/ToggleCollectProduct?productId=")${productId}`);
                const data = await resp.json();
                console.log(data)
                if (data.statusCode == 200) {
                    Swal.fire({
                        title: data.statusMessage,
                        text: "",
                        icon: 'success',
                        showConfirmButton: false,
                        timer: 1500,
                    });
                    GetCollectItems()

                } else {
                    Swal.fire({
                        title: data.statusMessage,
                        text: "",
                        icon: 'warning',
                        showConfirmButton: false,
                        timer: 1500
                    });
                }

            } else {
                Swal.fire({
                    title: '尚未登入!',
                    text: "如果想收藏商品,請先登入!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3C3C3C',
                    cancelButtonColor: '#D0D0D0',
                    confirmButtonText: '進行登入',
                    cancelButtonText: '稍後登入'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = `@Url.Content("~/Home/Login")`
                    }
                })
            }
        })

        async function LoadProductPhotoList(productId){
            const response = await fetch(`@Url.Content("~/ProductApi/GetProductPhotoList/")${productId}`)
            const data = await response.json();

            const photoList = data.map(item=>{
                return `<div class="divProductPhoto flex-shrink-0" data-photo-src="${item}">
                            <img src="@Url.Content("~/images/uploads/products/")${item}" />
                        </div>`
            })

            $('.divProductPhotoList').html(photoList.join(""))

            $(".divProductPhoto").mouseenter(function(){
                
                let togglePhoto = $(this).data("photo-src")

                let newPath = `@Url.Content("~/images/uploads/products/")${togglePhoto}`

                $('#productPhoto').attr("src", newPath)
            })
           
        }

        LoadProductPhotoList(productId)


    </script>
}